FROM node:20-slim AS build

RUN apt-get update
RUN apt-get install -y ca-certificates

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN npm install -g corepack@latest && corepack enable

WORKDIR /app

ARG GITHUB_TOKEN
ENV GITHUB_TOKEN $GITHUB_TOKEN

COPY package.json pnpm-lock.yaml ./
COPY design-system/.npmrc design-system/package.json pnpm-lock.yaml ./design-system/
RUN pnpm install --frozen-lockfile

ARG ENVIRONMENT
ENV VITE_ENVIRONMENT $ENVIRONMENT

ARG KOYEB_GIT_SHA
ARG APP_VERSION
ENV VITE_APP_VERSION ${KOYEB_GIT_SHA:-${APP_VERSION}}

ARG API_URL
ENV VITE_API_URL $API_URL

ARG WEBSITE_URL
ENV VITE_WEBSITE_URL $WEBSITE_URL

ARG PAGE_CONTEXT_BASE_URL
ENV VITE_PAGE_CONTEXT_BASE_URL $PAGE_CONTEXT_BASE_URL

ARG RECAPTCHA_CLIENT_KEY
ENV VITE_RECAPTCHA_CLIENT_KEY $RECAPTCHA_CLIENT_KEY

ARG POSTHOG_API_HOST
ENV VITE_POSTHOG_API_HOST $POSTHOG_API_HOST

ARG POSTHOG_KEY
ENV VITE_POSTHOG_KEY $POSTHOG_KEY

ARG STRIPE_PUBLIC_KEY
ENV VITE_STRIPE_PUBLIC_KEY $STRIPE_PUBLIC_KEY

ARG MAPBOX_TOKEN
ENV VITE_MAPBOX_TOKEN $MAPBOX_TOKEN

ARG INTERCOM_APP_ID
ENV VITE_INTERCOM_APP_ID $INTERCOM_APP_ID

ARG SENTRY_AUTH_TOKEN
ENV SENTRY_AUTH_TOKEN $SENTRY_AUTH_TOKEN

COPY . .
RUN pnpm run build

FROM nginx:latest

RUN apt-get update

COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 3000
COPY nginx.conf /etc/nginx/conf.d/default.conf
