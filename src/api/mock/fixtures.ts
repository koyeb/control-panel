import { createDate } from 'src/utils/date';
import { createFactory } from 'src/utils/factories';
import { createId } from 'src/utils/strings';

import { API } from '../api-types';

export const createApiApp = createFactory<API.App>(() => ({
  id: createId(),
}));

export const createApiService = createFactory<API.Service>(() => ({
  app_id: 'appId',
  created_at: createDate(),
  id: createId(),
  latest_deployment_id: '',
  messages: [],
  name: '',
  organization_id: '',
  status: 'HEALTHY',
  type: 'WEB',
}));

export const createApiDeployment = createFactory<API.Deployment>(() => ({
  id: createId(),
}));

export const createApiVolume = createFactory<API.PersistentVolume>(() => ({
  id: createId(),
}));

export const createApiRegion = createFactory<API.Region>(() => ({
  id: createId(),
  name: '',
  status: 'AVAILABLE',
  datacenters: [],
}));

export const createApiDatacenter = createFactory<API.DatacenterListItem>(() => ({
  id: createId(),
  name: '',
  domain: '',
}));

export const createApiCatalogInstance = createFactory<API.CatalogInstance>(() => ({
  id: createId(),
  display_name: '',
  status: 'AVAILABLE',
  type: 'standard',
  require_plan: [],
  regions: [],
  vcpu_shares: 0,
  memory: '',
  disk: '',
  price_monthly: '',
  price_hourly: '',
  price_per_second: '',
}));

const ecoInstanceIds = [
  'eco-2xlarge',
  'eco-large',
  'eco-medium',
  'eco-micro',
  'eco-nano',
  'eco-small',
  'eco-xlarge',
];

const standardInstanceIds = [
  '2xlarge',
  '3xlarge',
  '4xlarge',
  '5xlarge',
  'large',
  'medium',
  'micro',
  'nano',
  'small',
  'xlarge',
];

const gpuInstanceIds = [
  '2-gpu-nvidia-a100',
  '4-gpu-nvidia-a100',
  '8-gpu-nvidia-a100',
  'gpu-nvidia-a100',
  'gpu-nvidia-rtx-4000-sff-ada',
];

export const catalogRegionFixtures = [
  createApiRegion({
    id: 'fra',
    name: 'Frankfurt',
    datacenters: ['fra1', 'fra2', 'fsn1'],
    instances: ['free', ...ecoInstanceIds, ...standardInstanceIds, ...gpuInstanceIds],
    scope: 'metropolitan',
    volumes_enabled: true,
  }),
  createApiRegion({
    id: 'par',
    name: 'Paris',
    datacenters: ['par1'],
    instances: [...standardInstanceIds, ...gpuInstanceIds],
    scope: 'metropolitan',
    volumes_enabled: true,
  }),
  createApiRegion({
    id: 'sfo',
    name: 'San Francisco',
    datacenters: ['sfo1', 'sfo2'],
    instances: standardInstanceIds,
    scope: 'metropolitan',
    volumes_enabled: false,
  }),
  createApiRegion({
    id: 'sin',
    name: 'Singapore',
    datacenters: ['sin1'],
    instances: [...ecoInstanceIds, ...standardInstanceIds],
    scope: 'metropolitan',
    volumes_enabled: false,
  }),
  createApiRegion({
    id: 'tyo',
    name: 'Tokyo',
    datacenters: ['tyo1'],
    instances: standardInstanceIds,
    scope: 'metropolitan',
    volumes_enabled: false,
  }),
  createApiRegion({
    id: 'was',
    name: 'Washington, D.C',
    datacenters: ['rdu1', 'was1'],
    instances: ['free', ...ecoInstanceIds, ...standardInstanceIds, ...gpuInstanceIds],
    scope: 'metropolitan',
    volumes_enabled: true,
  }),
  createApiRegion({
    id: 'na',
    name: 'North America',
    datacenters: ['rdu1', 'was1'],
    scope: 'continental',
    volumes_enabled: true,
  }),
  createApiRegion({
    id: 'sa',
    name: 'South America',
    scope: 'continental',
    volumes_enabled: true,
  }),
  createApiRegion({
    id: 'nea',
    name: 'North-East Asia',
    scope: 'continental',
    volumes_enabled: true,
  }),
  createApiRegion({
    id: 'sea',
    name: 'South-East Asia',
    scope: 'continental',
    volumes_enabled: true,
  }),
  createApiRegion({
    id: 'af',
    name: 'Africa',
    scope: 'continental',
    volumes_enabled: true,
  }),
  createApiRegion({
    id: 'eu',
    name: 'Europe',
    datacenters: ['fra1'],
    scope: 'continental',
    volumes_enabled: true,
  }),
];

export const catalogDatacenterFixtures = [
  createApiDatacenter({
    id: 'par1',
    region_id: 'par',
    domain: 'glb-par1.infra.staging.koyeb.com',
    coordinates: ['2.3522', '48.8566'],
  }),
  createApiDatacenter({
    id: 'fra1',
    region_id: 'fra',
    domain: 'glb-fra1.infra.staging.koyeb.com',
    coordinates: ['8.6821', '50.1109'],
  }),
];

export const catalogInstanceFixtures = [
  createApiCatalogInstance({
    id: 'free',
    description: 'a special instance that does not bill',
    vcpu: 1,
    memory: '512MB',
    disk: '2000MB',
    price_hourly: '0.0',
    price_monthly: '0.0',
    regions: ['fra'],
    status: 'AVAILABLE',
    require_plan: [],
    vcpu_shares: 0.1,
    display_name: 'Free',
    aliases: [],
    type: 'eco',
    service_types: ['web'],
  }),

  createApiCatalogInstance({
    id: 'eco-nano',
    description: 'a very small eco instance',
    vcpu: 1,
    memory: '256MB',
    disk: '2000MB',
    price_hourly: '0.0022',
    price_monthly: '1.61',
    regions: ['fra'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 0.1,
    display_name: 'eNano',
    aliases: [],
    type: 'eco',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'eco-micro',
    description: 'a small eco instance',
    vcpu: 1,
    memory: '512MB',
    disk: '4GB',
    price_hourly: '0.0036',
    price_monthly: '2.68',
    regions: ['fra'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 0.25,
    display_name: 'eMicro',
    aliases: [],
    type: 'eco',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'nano',
    description: 'a very small instance',
    vcpu: 1,
    memory: '256MB',
    disk: '2000MB',
    price_hourly: '0.0036',
    price_monthly: '2.68',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 0.25,
    display_name: 'Nano',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'eco-small',
    description: 'a very small eco instance',
    vcpu: 1,
    memory: '1GB',
    disk: '8GB',
    price_hourly: '0.0072',
    price_monthly: '5.36',
    regions: ['fra'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 0.5,
    display_name: 'eSmall',
    aliases: [],
    type: 'eco',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'micro',
    description: 'a small instance',
    vcpu: 1,
    memory: '512MB',
    disk: '5GB',
    price_hourly: '0.0072',
    price_monthly: '5.36',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 0.5,
    display_name: 'Micro',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'eco-medium',
    description: 'a medium eco instance',
    vcpu: 1,
    memory: '2GB',
    disk: '16GB',
    price_hourly: '0.0144',
    price_monthly: '10.71',
    regions: ['fra'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 1,
    display_name: 'eMedium',
    aliases: [],
    type: 'eco',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'small',
    description: 'a very small instance',
    vcpu: 1,
    memory: '1GB',
    disk: '10GB',
    price_hourly: '0.0144',
    price_monthly: '10.71',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 1,
    display_name: 'Small',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'eco-large',
    description: 'a large eco instance',
    vcpu: 2,
    memory: '4GB',
    disk: '20GB',
    price_hourly: '0.0288',
    price_monthly: '21.43',
    regions: ['fra'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 2,
    display_name: 'eLarge',
    aliases: [],
    type: 'eco',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'medium',
    description: 'a medium instance',
    vcpu: 2,
    memory: '2GB',
    disk: '20GB',
    price_hourly: '0.0288',
    price_monthly: '21.43',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 2,
    display_name: 'Medium',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'eco-xlarge',
    description: 'an extra large eco instance',
    vcpu: 4,
    memory: '8GB',
    disk: '20GB',
    price_hourly: '0.0576',
    price_monthly: '42.85',
    regions: ['fra'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 4,
    display_name: 'eXLarge',
    aliases: [],
    type: 'eco',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'large',
    description: 'a large instance',
    vcpu: 4,
    memory: '4GB',
    disk: '40GB',
    price_hourly: '0.0576',
    price_monthly: '42.85',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 4,
    display_name: 'Large',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'eco-2xlarge',
    description: 'a 2x extra large eco instance',
    vcpu: 8,
    memory: '16GB',
    disk: '20GB',
    price_hourly: '0.1152',
    price_monthly: '85.71',
    regions: ['fra'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 8,
    display_name: 'e2XLarge',
    aliases: [],
    type: 'eco',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'xlarge',
    description: 'an extra large instance',
    vcpu: 8,
    memory: '8GB',
    disk: '80GB',
    price_hourly: '0.1152',
    price_monthly: '85.71',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 8,
    display_name: 'XLarge',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: '2xlarge',
    description: 'an extra large instance',
    vcpu: 16,
    memory: '16GB',
    disk: '160GB',
    price_hourly: '0.2304',
    price_monthly: '172.00',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 16,
    display_name: '2XLarge',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: '3xlarge',
    description: 'an extra large instance',
    vcpu: 24,
    memory: '32GB',
    disk: '240GB',
    price_hourly: '0.4608',
    price_monthly: '343.00',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 24,
    display_name: '3XLarge',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'gpu-nvidia-rtx-4000-sff-ada',
    description: 'Nvidia RTX 4000 SFF Ada Generation',
    vcpu: 6,
    memory: '44GB',
    disk: '240GB',
    price_hourly: '0.50',
    price_monthly: '372.00',
    regions: ['fra'],
    status: 'AVAILABLE',
    require_plan: ['startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 6,
    display_name: 'RTX-4000-SFF-ADA',
    aliases: ['rtx-4000-sff-ada', 'nvidia-rtx-4000-sff-ada', 'gpu-nvidia-rtx-4000-sff-ada'],
    type: 'gpu',
    gpu: {
      count: 1,
      brand: 'nvidia',
      memory: '20GB',
    },
    service_types: ['worker'],
  }),

  createApiCatalogInstance({
    id: '4xlarge',
    description: 'an extra large instance',
    vcpu: 32,
    memory: '64GB',
    disk: '320GB',
    price_hourly: '0.9216',
    price_monthly: '686.00',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 32,
    display_name: '4XLarge',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: 'gpu-nvidia-l4',
    description: 'Nvidia L4',
    vcpu: 30,
    memory: '44GB',
    disk: '320GB',
    price_hourly: '1.00',
    price_monthly: '744.00',
    regions: [],
    status: 'COMING_SOON',
    require_plan: ['startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 30,
    display_name: 'L4',
    aliases: ['l4', 'nvidia-l4', 'gpu-nvidia-l4'],
    type: 'gpu',
    gpu: {
      count: 1,
      brand: 'nvidia',
      memory: '24GB',
    },
    service_types: ['worker'],
  }),

  createApiCatalogInstance({
    id: '5xlarge',
    description: 'an extra large instance',
    vcpu: 40,
    memory: '128GB',
    disk: '400GB',
    price_hourly: '1.8432',
    price_monthly: '1371.00',
    regions: ['fra', 'par'],
    status: 'AVAILABLE',
    require_plan: ['starter', 'startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 40,
    display_name: '5XLarge',
    aliases: [],
    type: 'standard',
    service_types: ['web', 'worker'],
  }),

  createApiCatalogInstance({
    id: '2-gpu-nvidia-l4',
    description: '2x Nvidia L4',
    vcpu: 30,
    memory: '44GB',
    disk: '320GB',
    price_hourly: '2.00',
    price_monthly: '1488.00',
    regions: [],
    status: 'COMING_SOON',
    require_plan: ['startup', 'business', 'enterprise', 'internal'],
    vcpu_shares: 30,
    display_name: '2x L4',
    aliases: ['2-l4', '2-nvidia-l4', '2-gpu-nvidia-l4'],
    type: 'gpu',
    gpu: {
      count: 2,
      brand: 'nvidia',
      memory: '24GB',
    },
    service_types: ['worker'],
  }),
];
